{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/services/images-api.jsx","components/ImagesErrorView/ImagesErrorView.jsx","components/ImagePendingView/ImagePendingView.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/ImagesInfo/ImagesInfo.jsx","components/App/App.jsx","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","ImagesErrorView","message","role","ImagePendingView","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","onClick","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","Button","scroll","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","ImagesInfo","status","onClickLoadMore","prevState","prevProps","prevName","nextName","prevPage","nextPage","imagesAPI","newImages","total","hits","catch","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ef3bf94.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n    imageName: \"\",\r\n    }\r\n\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    };\r\n\r\n    handleNameChange = event => {\r\n        this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.imageName.trim() === \"\") {\r\n            return toast.error(\"Введите название картинки!\");\r\n            \r\n        }\r\n\r\n        this.props.onSubmit(this.state.imageName);\r\n        this.setState({imageName: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    value={this.state.imageName}\r\n                    onChange={this.handleNameChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}","function fetchImages(name, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=19201386-219bb908558d098454af3ef41&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error('No response from server'));\r\n  });\r\n}\r\n\r\nconst api = { fetchImages };\r\n\r\nexport default api;","import PropTypes from 'prop-types';\r\n\r\nexport default function ImagesErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Sorry, something went wrong. Error: {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nImagesErrorView.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default class ImagePendingView extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Loader\r\n        className=\"Loader\"\r\n        type=\"Oval\"\r\n        color=\"#303f9f\"\r\n        height={80}\r\n        width={80}\r\n      />\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    static propTypes = {\r\n      onClose: PropTypes.func.isRequired,\r\n      src: PropTypes.string.isRequired,\r\n      alt: PropTypes.string.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown)    \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n                this.props.onClose();\r\n            }\r\n    }\r\n\r\n    handleBackdropClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n\r\n     render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal/Modal';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n    state = {\r\n        showModal: false,\r\n    };\r\n  \r\n    static propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n  };\r\n    \r\n     toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n        showModal: !showModal,\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { src, alt, largeImageUrl } = this.props;\r\n        const { showModal } = this.state;\r\n\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          onClick={this.toggleModal}\r\n          src={src}\r\n          alt={alt}\r\n          className=\"ImageGalleryItemImage\"\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\n\r\nexport default function ImageGallery({ images }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image, index) => (\r\n        <ImageGalleryItem\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          largeImageUrl={image.largeImageURL}\r\n          key={index}\r\n        />\r\n      )\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Button extends Component { \r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n  };\r\n\r\n    scroll = () => {\r\n    this.props.onClick();\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight - 130,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.scroll} className=\"Button\" type=\"button\">\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport imagesAPI  from '../services/images-api';\r\nimport ImagesErrorView from '../ImagesErrorView/ImagesErrorView';\r\nimport ImagePendingView from '../ImagePendingView/ImagePendingView';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Button from '../Button/Button';\r\n\r\nexport default class ImagesInfo  extends Component {\r\n    state = {\r\n        images: [],\r\n        error: null,\r\n        status: 'idle',\r\n        page: 1,\r\n    }\r\n\r\n     static propTypes = {\r\n        imageName: PropTypes.string.isRequired,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const prevName = prevProps.imageName;\r\n        const nextName = this.props.imageName;\r\n        const prevPage = prevState.page;\r\n        const nextPage = this.state.page;\r\n\r\n        if (prevName !== nextName) {\r\n            this.setState({ page: 1 });\r\n        }\r\n\r\n        if (prevName !== nextName || prevPage !== nextPage) {           \r\n            this.setState({ status: 'pending' });\r\n            \r\n            imagesAPI\r\n                .fetchImages(nextName, nextPage)\r\n                .then(newImages => {\r\n                    if (newImages.total !== 0) {\r\n                        this.setState(prevState => ({\r\n                            images: [...prevState.images, ...newImages.hits],\r\n                            status: 'resolved',\r\n                        }));\r\n                        return;\r\n                    }\r\n\r\n          return Promise.reject(new Error('Invalid request'));\r\n        })\r\n        .catch(error => this.setState({ error, status: 'rejected' }));\r\n    }\r\n  }\r\n\r\n  onClickLoadMore = () => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n    \r\n    render() {\r\n        const { error, status } = this.state;\r\n\r\n        if (status === 'idle') {\r\n            return <p>Please enter your search term</p>;\r\n        }\r\n\r\n        if (status === 'pending') {\r\n            return <ImagePendingView />\r\n        }\r\n\r\n        if (status === 'rejected') {\r\n            return <ImagesErrorView message={error.message} />;\r\n        }\r\n\r\n        if (status === 'resolved') {\r\n            return (\r\n                    <>\r\n                        <ImageGallery images={this.state.images} />\r\n                        <Button onClick={this.onClickLoadMore} page={this.state.page} />\r\n                    </>\r\n      );\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\nimport { ToastContainer} from 'react-toastify';\nimport Searchbar from '../Searchbar/Searchbar';\nimport ImagesInfo from \"../ImagesInfo/ImagesInfo\";\n\nexport default class App extends Component {\n    state = {\n        imageName: '',\n    }\n\n    componentDidMount() {}\n\n    handleFormSubmit = imageName => {\n        this.setState({imageName});\n    }\n\n    \n\n    render() {\n\n      \n\n        return (\n            \n            <>\n                <ToastContainer autoClose={3000} />\n\n                <Searchbar onSubmit={this.handleFormSubmit} />\n                <ImagesInfo imageName={this.state.imageName} />\n            </>\n        );\n    }\n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App.jsx\";\nimport \"./components/App/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}